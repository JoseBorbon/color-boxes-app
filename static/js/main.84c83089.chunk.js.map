{"version":3,"sources":["ColorBox.jsx","utilities/getRandIdx.js","data/colors.js","ColorBoxesContainer.jsx","App.js","index.js"],"names":["ColorBox","id","this","props","curColor","style","shape","borderRadius","border","onClick","click","Component","getRandIdx","arr","Math","floor","random","length","colors","ColorBoxesContainer","state","handleClick","bind","toggleShape","target","randIdx","setState","curState","boxes","Array","from","numBoxes","map","className","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAGMA,E,4JACJ,WACE,OACE,qBACEC,GAAIC,KAAKC,MAAMC,SACfC,MACuB,WAArBH,KAAKC,MAAMG,MACP,CAAEC,aAAc,EAAGC,OAAQ,mBAC3B,CAAED,aAAc,IAAKC,OAAQ,mBAEnCC,QAASP,KAAKC,MAAMO,Y,GAVLC,aAgBRX,ICfAY,G,MAJI,SAACC,GAClB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,UCezBC,EAhBA,CACb,MACA,QACA,OACA,SACA,SACA,OACA,QACA,QACA,SACA,UACA,OACA,SACA,QCPIC,E,kDAKJ,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IACDiB,MAAQ,CACXd,MAAO,UAET,EAAKe,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBANF,E,+CAQnB,YAAyB,IAAXE,EAAU,EAAVA,OAERC,EAAUb,EAAWM,GACzBM,EAAOvB,GACLuB,EAAOvB,KAAOC,KAAKC,MAAMe,OAAOO,GAC5BvB,KAAKC,MAAMe,OAAOO,EAAU,IAAMvB,KAAKC,MAAMe,OAAOO,EAAU,GAC9DvB,KAAKC,MAAMe,OAAOO,K,yBAE1B,WACEvB,KAAKwB,UAAS,SAACC,GACb,MAA0B,WAAnBA,EAASrB,MACZ,CAAEA,MAAO,UACT,CAAEA,MAAO,e,oBAGjB,WAAU,IAAD,OACDsB,EAAQC,MAAMC,KAAK,CAAEb,OAAQf,KAAKC,MAAM4B,WAAYC,KAAI,WAC5D,OACE,cAAC,EAAD,CACE5B,SAAU,EAAKD,MAAMe,OAAON,EAAW,EAAKT,MAAMe,SAClDA,OAAQA,EACRR,MAAO,EAAKW,YACZf,MAAO,EAAKc,MAAMd,WAIxB,OACE,qCACE,4EACA,qBAAK2B,UAAU,wBAAf,SAAwCL,IACxC,wBAAQnB,QAASP,KAAKqB,YAAtB,SACwB,WAArBrB,KAAKkB,MAAMd,MACR,oBACA,6B,GA9CoBK,aAA5BQ,EACGe,aAAe,CACpBhB,SACAa,SAAU,IAkDCZ,QCpDAgB,MAJf,WACE,OAAO,cAAC,EAAD,KCCTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.84c83089.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './ColorBox.css';\n\nclass ColorBox extends Component {\n  render() {\n    return (\n      <div\n        id={this.props.curColor}\n        style={\n          this.props.shape === 'square'\n            ? { borderRadius: 0, border: '2px solid black' }\n            : { borderRadius: 150, border: '2px solid black' }\n        }\n        onClick={this.props.click}\n      ></div>\n    );\n  }\n}\n\nexport default ColorBox;\n","const getRandIdx = (arr) => {\n  return Math.floor(Math.random() * arr.length);\n};\n\nexport default getRandIdx;\n","const colors = [\n  'red',\n  'green',\n  'blue',\n  'yellow',\n  'orange',\n  'pink',\n  'white',\n  'black',\n  'purple',\n  'magenta',\n  'cyan',\n  'indigo',\n  'teal',\n];\n\nexport default colors;\n","import React, { Component } from 'react';\nimport ColorBox from './ColorBox';\nimport './ColorBoxesContainer.css';\nimport getRandIdx from './utilities/getRandIdx';\nimport colors from './data/colors';\n\nclass ColorBoxesContainer extends Component {\n  static defaultProps = {\n    colors,\n    numBoxes: 18,\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      shape: 'square',\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.toggleShape = this.toggleShape.bind(this);\n  }\n  handleClick({ target }) {\n    //when click, change color to another\n    let randIdx = getRandIdx(colors);\n    target.id =\n      target.id === this.props.colors[randIdx]\n        ? this.props.colors[randIdx + 1] || this.props.colors[randIdx - 1]\n        : this.props.colors[randIdx];\n  }\n  toggleShape() {\n    this.setState((curState) => {\n      return curState.shape === 'square'\n        ? { shape: 'circle' }\n        : { shape: 'square' };\n    });\n  }\n  render() {\n    const boxes = Array.from({ length: this.props.numBoxes }).map(() => {\n      return (\n        <ColorBox\n          curColor={this.props.colors[getRandIdx(this.props.colors)]}\n          colors={colors}\n          click={this.handleClick}\n          shape={this.state.shape}\n        />\n      );\n    });\n    return (\n      <>\n        <h1>Welcome! Click A Box To Change It's Color!</h1>\n        <div className=\"Color-boxes-container\">{boxes}</div>\n        <button onClick={this.toggleShape}>\n          {this.state.shape === 'circle'\n            ? 'Toggle To Squares'\n            : 'Toggle To Circles'}\n        </button>\n      </>\n    );\n  }\n}\n\nexport default ColorBoxesContainer;\n","import './App.css';\nimport ColorBoxesContainer from './ColorBoxesContainer';\n\nfunction App() {\n  return <ColorBoxesContainer />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}